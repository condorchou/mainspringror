Mainspringror project - multiclient CMS for managing videos, users, comments, ratings

====

Restful resources for CRUD operations on clients, their videos and their users with predictable urls.

1) See all clients at /clients
2) Manage clients videos at clients/:client_id/videos
3) Manage clients users at clients/:client_id/users

====

Authentication and Authorization: 

Authentication login by authenication controller:
/login - explicite login with username, password and client_id
/intranet_login -implicit login through intranet iframe src parameters using token, username, location 

Authorization in each controller via CanCan plugin
configured in models/abilities.rb - no client user can view videos of another client without proper role
Roles:

super_admin - can manage all resources including adding or deleting clients
client_admin - client admin, can modify client record, manage users and videos
intranet_user - typical intranet user that just looks at videos, can comment, can rate

====

separate iframe test environment:

to simulate client's intranet as perceived from an iframe use copy public/iframe_integration_sample.php
There will be no simulation within the Ror app

=====

Permalinks:
intranet_login?... goto=forward_to_url_that_is_cgi_escapeHTML - after entry point, forward user to CMS page (allows real bookmarking)
intranet_login action does a CGI.unescape and redirects employee to goto destination
unobtrusive javascript replace links that lead back to mainspring with intranet_url + goto=escape(original_url)

===

Tabs:

Video show page can have tabbed sections.  When video from a tab section is clicked, that tab remains highlighted
 and videos within that tab are retained on subsequent video.  The tabs must be built as a content asset then associated
 with the client.tabs attribute (this will cause this content asset to be loaded on the video/show page).  When a new
 video/show page is rendered, the tab that is highlighted the one matching that video's video.tab_highlight attribute.
 highlighting will be done clientside using jQuery.
TODO - create jQuery function that helps with that...
====

Content Assets

Templates that are stored in the DB.  Evaluated as erb.  Can be used to render tabs in video show.

====

Commenting
Comments are nested resource of videos.  clients/:client_id/videos/:video_id/comment
But normally accessed through video show page and updated through ajax.
TODO - ajaxify add comment

====
Client styling:
Client has one attribute css style.  It is loaded for the client on each page.  Since this data is in the DB
and not under version control, recommend committing samples to repository.
TODO: add samples to repository
=====

Rating
used https://github.com/josei/acts_as_rateable
TODO add ajax methods for rating a video

====
TODO
Tagging

====
TODO
Video Uploading

====
TODO
Search:

clients/x/videos/search?terms search within client videos matching search terms

====
TODO
Video Overlays - or other stylings
videos model has attribute for css classes.  These css classes can be styled to support thumb overlays.


